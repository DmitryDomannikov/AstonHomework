spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/hibernate_demo_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      pool-name: UserServicePool
      maximum-pool-size: 10
      minimum-idle: 2
      leak-detection-threshold: 3000
      connection-timeout: 5000
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=500,expireAfterWrite=5m
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer  # ИСПРАВЛЕНО
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer  # ИСПРАВЛЕНО
    consumer:
      group-id: notification-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer  # ДОБАВЛЕНО
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer  # ДОБАВЛЕНО
      properties:
        spring.json.trusted.packages: "com.example.userservice.dto"  # ДОБАВЛЕНО
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  security:
    user:
      name: admin
      password: ${ADMIN_PASSWORD:defaultPass}
      roles: ADMIN

logging:
  level:
    org.springframework.security: DEBUG
    com.example.userservice: DEBUG

server:
  port: 8088
  servlet:
    context-path: /api