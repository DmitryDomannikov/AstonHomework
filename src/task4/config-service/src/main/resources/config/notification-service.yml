server:
  port: 8081

spring:
  application:
    name: notification-service

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME:dmnk95@mail.ru}
    password: ${EMAIL_PASSWORD:your-app-password}
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
    debug: true

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "com.example.notification-service.dto"
        auto:
          offset:
            reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  compatibility-verifier:
        enabled: false

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    prefer-ip-address: true

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha

logging:
  level:
    com.example.notificationservice: DEBUG
    org.springframework.kafka: DEBUG
    org.springframework.mail: DEBUG
