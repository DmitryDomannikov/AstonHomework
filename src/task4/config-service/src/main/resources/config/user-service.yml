server:
  port: 8088
  servlet:
    context-path: /api

spring:
  application:
    name: user-service

  datasource:
    url: jdbc:postgresql://localhost:5432/hibernate_demo_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      pool-name: UserServicePool
      maximum-pool-size: 10
      minimum-idle: 2
      leak-detection-threshold: 3000
      connection-timeout: 5000

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true

  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=500,expireAfterWrite=5m

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        delivery.timeout.ms: 3000
        retries: 3

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  doc:
    api-docs:
      path: /v3/api-docs
    swagger-ui:
      path: /swagger-ui.html
      tags-sorter: alpha
      operations-sorter: alpha
      url: http://localhost:8089/v3/api-docs

  security:
    user:
      name: admin
      password: ${ADMIN_PASSWORD:admin}
      roles: ADMIN

logging:
  level:
    org.springframework.security: DEBUG
    com.example.userservice: DEBUG
    org.springframework.kafka: DEBUG

management:
  server:
    port: 8089
  endpoints:
    web:
      exposure:
        include: health,info,mappings
  endpoint:
    health:
      show-details: always

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
